1) Write a query that shows a company's name, "status" (found in the Companies table), and the number of unique investors in 
that company. Order by the number of investors from most to fewest. Limit to only companies in the state of New York.

SELECT a.name, a.status, COUNT(DISTINCT b.investor_name) AS Unique_investors
FROM tutorial.crunchbase_companies a
LEFT JOIN tutorial.crunchbase_investments b
ON a.permalink=b.company_permalink
WHERE state_code='NY'
GROUP BY 1,2
ORDER BY 3 DESC

2) Write a query that lists investors based on the number of companies in which they are invested. 
Include a row for companies with no investor, and order from most companies to least.

SELECT CASE 
WHEN b.investor_name IS NULL THEN 'No_Investors'
ELSE b.investor_name END AS investor_name,
COUNT(DISTINCT a.name) AS invested_companies
FROM tutorial.crunchbase_companies a
LEFT JOIN tutorial.crunchbase_investments b
ON a.permalink=b.company_permalink
GROUP BY 1
ORDER BY 2 DESC

3) Write a query that appends the two crunchbase_investments datasets (including duplicate values). 
Filter the first dataset to only companies with names that start with the letter "T", and filter the second to companies 
with names starting with "M" (both not case-sensitive). Only include the company_permalink, company_name, and investor_name columns.

SELECT company_permalink, company_name, investor_name
FROM tutorial.crunchbase_investments_part1 
WHERE company_name LIKE 'T%'

UNION ALL

SELECT company_permalink, company_name, investor_name
FROM tutorial.crunchbase_investments_part2
WHERE company_name LIKE 'M%'

4) Write a query that shows 3 columns. The first indicates which dataset (part 1 or 2) the data comes from, the second shows 
company status, and the third is a count of the number of investors. 

SELECT 'investments_part1' AS dataset_name,
       companies.status,
       COUNT(DISTINCT investments.investor_permalink) AS investors
  FROM tutorial.crunchbase_companies companies
  LEFT JOIN tutorial.crunchbase_investments_part1 investments
    ON companies.permalink = investments.company_permalink
 GROUP BY 1,2

 UNION ALL
 
 SELECT 'investments_part2' AS dataset_name,
       companies.status,
       COUNT(DISTINCT investments.investor_permalink) AS investors
  FROM tutorial.crunchbase_companies companies
  LEFT JOIN tutorial.crunchbase_investments_part2 investments
    ON companies.permalink = investments.company_permalink
 GROUP BY 1,2
